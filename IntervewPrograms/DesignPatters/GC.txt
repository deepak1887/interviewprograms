1.Marking Phase: A list of all the live objects is created during the marking phase. 
				This is done by following the references from all the root objects. 
				All of the objects that are not on the list of live objects are potentially 
				deleted from the heap memory.
2. Relocating Phase: The references of all the objects that were on the list of all the 
				live objects are updated in the relocating phase so that they point to the 
				new location where the objects will be relocated to in the compacting phase.
3. Compacting Phase: The heap gets compacted in the compacting phase as the space occupied 
				by the dead objects is released and the live objects remaining are moved. 
				All the live objects that remain after the garbage collection are moved 
				towards the older end of the heap memory in their original order. 



Generation 0 : All the short-lived objects such as temporary variables are contained 
				in the generation 0 of the heap memory. All the newly allocated objects are 
				also generation 0 objects implicitly unless they are large objects. In general, 
				the frequency of garbage collection is the highest in generation 0.
Generation 1 : If space occupied by some generation 0 objects that are not released in a 
				garbage collection run, then these objects get moved to generation 1. 
				The objects in this generation are a sort of buffer between the short-lived 
				objects in generation 0 and the long-lived objects in generation 2.
Generation 2 : If space occupied by some generation 1 objects that are not released in 
				the next garbage collection run, then these objects get moved to generation 2. 
				The objects in generation 2 are long lived such as static objects as they remain 
				0in the heap memory for the whole process duration.